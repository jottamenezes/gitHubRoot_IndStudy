* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html, body {
  height: 100%;
}

body {
  background-color: #66a8de;
  font-size: 1em;
  color: hsl(210, 25%, 24%);
  font-family: Montserrat, sans-serif;
  overflow: hidden;
}

/* HEADER related changes, not needed for this phase
header {
  position: absolute;
  right: 0;
  top: 0;
  width: 100vw;
  z-index: 99;
} */
/*
#logo {
  background-color: #d8e1e9;
  position: relative;
  text-align: center;
  top: 30px;
  left: 30px;
  width: 140px;
  height: 50px;
}

#slider-nav {
  position: absolute;
  right: 20px;
  top: 300px;
}

ul {
  font-size: 2rem;
  color: white;
} */
main {
  position: absolute;
  background-color: #629bf0;
  width: 100vw;
  height: 100vh;

}

h1 {
  font-size: 4em;
  width: 100%;
  position: absolute;
  bottom: 0vh;
  color: #9cbff2;
  font-family: 'Amatic SC', cursive;
}

.principlesBG {

  /* display: flex;
  flex-wrap: wrap;
  flex-direction: column; */
  position: absolute;
  /* align-items: center; */
  text-align: center;
  background-color: #2e2047;
  top: 1%;
  right: 1%;
  z-index: 10;
  width: 98%;
  height: 98%;
}

#principle-ground {
  position: absolute;
  background-color: #241130;
  width: 100%;
  height: 33vh;
  align-items: center;
  bottom: 0;
  right: 0;
}


.svgPath {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);


fill:none;
stroke: #fff;
stroke-width: 5;
stroke-linecap: round;
stroke-linejoin: round;

z-index: 0;
}

#principle-1 {
  background: linear-gradient(50deg, rgba(97, 180, 205, 1) -60%, rgba(38, 55, 138, 1) 30%, rgba(255, 255, 28, 1) 100%);
  position: relative;
  width: 7em;
  height: 7em;
  /* Centering div */

  /* top: 50%;
  left: 50%; */
  /* transform: translateX(50%) translateY(50%); */
    transform-origin: center;

path: path("M278.5,578.5c0-135,113-244.5,248-244.5S771,443.5,771,578.5c0-91.4,74.1-165.5,165.5-165.5 S1102,487.1,1102,578.5");
offset-distance: 0%;

  border-radius: 50%;
  /*TRIGGER ANIMATION ON LOAD */

  animation-name: arcs;

  animation-duration: 3s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
      animation-timing-function: ease-in;
  /* OR */
  /* animation: squashAndStretch, 5s, infinite;

}

#principle-1:hover {
  transform: translateX(-50%) translateY(0%) scale(1.2) rotate(0deg);

  box-shadow: 0px 0px 20px 10px rgba(255, 255, 28, .2);
  box-shadow: 0px 0px 30px 5px rgba(97, 180, 205, .6);
  animation-play-state: paused;
  /* animation-name: squashAndStretch, bounce;
  animation-delay: .5s, 6.5s;
  animation-duration: 6s, 4s; */
}

@keyframes arcs {
  from {

    transform:  scaleX(0.5) scaleY(1.5);
    box-shadow: 0px 13px 10px -2px rgba(0, 0, 28, .3);

      offset-distance: 0%;
    }
    10% {
      transform:  scaleX(1.4) scaleY(0.9);

    }

    22%{
      transform:  scaleX(1) scaleY(1) rotate(45deg);
      box-shadow: 0px 0px 70px -5px rgba(0, 45, 205, .7);


    }

45% {
      transform:  scaleX(1) scaleY(1) rotate(90deg);
    offset-distance: 59%;
}

50%, 52% {
  transform:  scaleX(0.5) scaleY(1.5)rotate(180deg) ;
  box-shadow: 0px 13px 10px -2px rgba(0, 0, 28, .3);



}
56% {
  transform:  scaleX(1.3) scaleY(0.9) rotate(360deg) ;

}



75% {

  transform:  scaleX(1) scaleY(1) rotate(405deg) ;
;
  box-shadow: 0px 0px 70px -5px rgba(0, 45, 205, .7);

}

90% {
  transform:  scaleX(1.3) scaleY(0.9)  rotate(450deg) ;

}



  to {
    transform:  scaleX(0.5) scaleY(1.5)  rotate(495deg) ;
    box-shadow: 0px 13px 10px -2px rgba(0, 0, 28, .3);

      offset-distance: 100%;



  }
}








/*
10%,
20% {
  transform: translateX(100%)  scaleX(0.8) scaleY(1.2);
  box-shadow: 0px 150px 200px -50px rgba(0, 45, 205, .6);
20%,
29% {

  transform: translateX(-100%) translateY(0%) scaleX(1.5) scaleY(.5);
}
29%,

33% {
  transform: translateX(-50%) translateY(0%)  scaleX(1.7) scaleY(.3);
}
33%,
35% {
  transform: translateX(-50%) translateY(0%)  scaleX(1.3) scaleY(.7);
}

35%,
36% {
  transform: translateX(-50%) translateY(0%)  scaleX(0.5) scaleY(1.5);
} */


/* @keyframes bounce {
  from {
    transform: translateX(-50%) translateY(-200%) scaleX(1) scaleY(1);
  }

  25%,
  50% {
    transform: translateX(-50%) translateY(0%) scale(1.2);
  }

  50%, 100% {
    transform: translateX(-50%) translateY(20%) scale(1.2);
  }

  to {
    transform: translateX(-50%) translateY(30%) scale(1.2);
  }
} */
